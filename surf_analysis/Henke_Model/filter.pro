;; 	program to calculate filter transmission for henke_data_set;;	calls henke_t;;	TNW   5/93;;	Updated to do automatic calcuation if pass keywords elements and thickness;	TNW 1/05;;	OPTIONAL INPUT:		elements = string array of elements;						thickness = float array of thickness in Angstroms;pro filter, wave, trans, title, elements=elements, thickness=thicknessename = ''tname = ''num = 0el = ''thick = 0.0if keyword_set(elements) and keyword_set(thickness) then begin  ;  ; automatic calculation  ;  numel = n_elements(elements)  for k=0,numel-1 do begin	  elsave = strtrim(elements[k],2)	  henke_t, elements[k], wv, mu	  if elements[k] eq elsave then begin		if num gt 0 then ename = ename + '/'		ename = ename + elsave		if num gt 0 then tname = tname + '/'		tname = tname + strtrim( string( long(thickness[k]) ), 2 )		if num eq 0 then trans = wv/wv		wave = wv		trans = trans * exp( -1. * thickness[k] / mu )	  endif else begin		print, 'WARNING: Unable to find ' + elsave, ' --> Check upper/lower case ?'	  endelse	  num = num + 1  endforendif else begin  ;  ; manual calculation  ;  repeat begin	read, 'Enter element name (CR to end, ex: Al) : ', el	if el ne '' then begin	  read, 'Enter thickness (in Angstroms) : ', thick	  elsave = strtrim(el, 2)	  henke_t, el, wv, mu	  if el eq elsave then begin		if num gt 0 then ename = ename + '/'		ename = ename + elsave		if num gt 0 then tname = tname + '/'		tname = tname + strtrim( string( long(thick) ), 2 )		if num eq 0 then trans = wv/wv		wave = wv		trans = trans * exp( -1. * thick / mu )	  endif else begin		print, 'Unable to find ' + elsave, ' --> Check upper/lower case ?'		el = ' '	  endelse	  num = num + 1	endif  endrep until (el eq '')  title = ename + ' : ' + tname + ' Ang'  plot_trans, wave, trans, title  ans = ''  read,'Plot it ? (Y/N) ', ans  if strupcase( strmid(ans,0,1) ) eq 'Y' then $	plot_trans, wave, trans, title, /plotitendelsereturnend