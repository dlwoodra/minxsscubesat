pro henke,compound_name,density,energy,f1,f2,delta,beta, $        graze_mrad,reflect,help=help;+; pro henke,compound_name,density,energy,f1,f2,delta,beta, $;       graze_mrad,reflect;; All you give it is compound_name and density;; CJJ Feb. 93;-if (keyword_set(help) or (n_elements(compound_name) eq 0)) then begin  print,'henke,compound_name,density,energy,f1,f2,delta,beta, $'  print,'    graze_mrad,reflect'  print,'  To get 1/e absorption length "mu" in microns, do:'  print,'    mu=1.2398/(energy*4.*!pi*beta)'  returnendifhenke_array,compound_name,density,enarr,f1arr,f2arr,deltaarr,betaarr, $        graze_mrad,reflect_arrnum_energies=n_elements(enarr)high_index=0while ((energy gt enarr(high_index)) and $        (high_index lt (num_energies-1))) do begin        high_index=high_index+1endwhileif (high_index eq 0) then high_index=1low_index=high_index-1ln_lower_energy = alog(enarr(low_index))ln_higher_energy = alog(enarr(high_index))fraction = (alog(energy)-ln_lower_energy)/(ln_higher_energy-ln_lower_energy)f1_lower = f1arr(low_index)f1_higher = f1arr(high_index)f1 =  f1_lower + fraction * (f1_higher - f1_lower)ln_f2_lower = alog(abs(f2arr(low_index)))ln_f2_higher = alog(abs(f2arr(high_index)))f2 = exp(ln_f2_lower + fraction * (ln_f2_higher - ln_f2_lower))delta_lower = deltaarr(low_index)delta_higher = deltaarr(high_index)delta =  delta_lower + fraction * (delta_higher - delta_lower)ln_beta_lower = alog(abs(betaarr(low_index)))ln_beta_higher = alog(abs(betaarr(high_index)))beta = exp(ln_beta_lower + fraction * (ln_beta_higher - ln_beta_lower) )reflect_lower = reflect_arr(low_index)reflect_higher = reflect_arr(high_index)reflect =  reflect_lower + fraction * (reflect_higher - reflect_lower)returnend